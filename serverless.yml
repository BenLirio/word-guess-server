service: word-guess-server

frameworkVersion: '4'

plugins:
  - serverless-offline
  # Note: serverless-plugin-typescript is not included as it's not compatible with serverless v4+

custom:
  webpack:
    webpackConfig: webpack.config.js
    includeModules: true
    packager: npm
  build:
    esbuild: false

provider:
  name: aws
  runtime: nodejs18.x
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'us-east-1'}
  memorySize: 2560
  timeout: 29
  logRetentionInDays: 14
  environment:
    NODE_ENV: ${self:provider.stage}
    WORD_GUESS_LEADERBOARD_TABLE_NAME: ${env:WORD_GUESS_LEADERBOARD_TABLE_NAME, 'guess-word-leaderboard-v2'}
    WORD_GUESS_TOKENS_TABLE_NAME: ${env:WORD_GUESS_TOKENS_TABLE_NAME, 'word-guess-tokens'}
    OPENAI_API_KEY: ${env:OPENAI_API_KEY}
    DISCORD_BOT_TOKEN: ${env:DISCORD_BOT_TOKEN}
    DISCORD_CHANNEL_ID: ${env:DISCORD_CHANNEL_ID}
    DISCORD_THREAD_ID: ${env:DISCORD_THREAD_ID}
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
          Resource: '*'

functions:
  hello:
    handler: src/handlers/app.handler
    events:
      - http:
          method: POST
          path: app
          cors:
            origin: '*' # Allow any origin
            headers:
              - Content-Type
              - Authorization
              - X-Amz-Date
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
            allowCredentials: true
      - http:
          method: OPTIONS
          path: app
          cors:
            origin: '*' # Allow any origin
            headers:
              - Content-Type
              - Authorization
              - X-Amz-Date
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
            allowCredentials: true

package:
  individually: true
